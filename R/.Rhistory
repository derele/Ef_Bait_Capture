head(FC_10)
head(FC_20)
head(FC_70)
head(FC_50))
head(FC_50)
head(FC_30)
FC_10$stat
FC_10$stat$Status
56151+397202+3217871
2204+20588+8198552
FC_10$stat$X.SAN.Alices_sandpit.sequencing_data_dereplicated.All_alignments_Rsubread_align..2672Single_S17_R1_001.fastq.unique.gz_10.BAM
FC_10$stat$X.SAN.Alices_sandpit.sequencing_data_dereplicated.All_alignments_Rsubread_align..2672Single_S17_R1_001.fastq.unique.gz_10.BAM
FC_10$stat$X.SAN.Alices_sandpit.sequencing_data_dereplicated.All_alignments_Rsubread_align..2672Single_S17_R1_001.fastq.unique.gz_10.BAM[2]
FC_10$annotation
FC_10$stat$Status
17639065+328592+212107
FC_10$stat[1]
FC_10$stat[2]
212107/(328592+17639065)
17639065/(17639065+328592+212107)
1-0,9702582
1-0.9702582
head(FC_10)
head(FC_10[1])
length(FC_10)
length(FC_10$1]
length(FC_10$1)
length(FC_10[1])
length(FC_10[[1]])
head(FC_10[[1]])
str(FC_10)
fix.X11()
plot(x~y)
fix.X11()
plot(x~y)
thebams
thebams
thebams
thebams
thebams
FilesR1
head(falGenome)
sub(".*"*",esssai)
)
)"

530+242
mydata
mydata
warnings()
)
)
=
)
head(baits)
table(baits$V1)
baits[baits$V1%in%"EfaB_7715",]
 test.case <- baits[baits$V1%in%"EfaB_7715",]
 test.case <- baits[baits$V1%in%"EfaB_7715|EfaB_6072",]
test.case
 test.case <- baits[baits$V1%in%c("EfaB_7715","EfaB_6072"),]
test.case
by(test.case, test.case$V1, length)
by(test.case, as.character(test.case$V1), length)
by(test.case, as.character(test.case$V1), mrow)
by(test.case, as.character(test.case$V1), nrow)
by(test.case, as.character(test.case$V1), print)
by(test.case, as.character(test.case$V1), function(x) nrow(x))
by(test.case, as.character(test.case$V1), function(x) print(min(x$V4))
)
by(test.case, as.character(test.case$V1), function(x) print(min(x$V4)))
test.case
)
help(read.table)
table
fix.X11()
F$stat
F$stat[2]
sum(F$stat[2]
)
F$annotation
head(F$annotation)
F$stat
sum(F$stat[2])
theFC$annotation
theFC$stat
tabFC
str(tabFC)
fix.X11
fix.X11()
tabFC
head(tabFC)
head(theFC$stat)
theFC$counts
fix.X11()
fix.X11()
tail(Fullbaitsfinal)
TabFinal
Numberseq
fix.X11()
myplot1
clear
clean
40000000
40000000/40000
40000000/400
)
clean
clean()
clear()
)MyDF$Group <- ifelse(grepl("mito", MyDF$baits, ignore.case = T), "Mitochondria", "other")
Mtot
M3
Tab2
tail(Tab2)
tail(F2$count)
tail(F1_R1$annotation$Length)
tail(F1_R1$annotation)
head(datcontig)
head(Fullbaits)
tail(Fullbaits)
tail(Fullbaits)
head(baits2)
head(baits2)
d
head(essai)
essai
c
)
head(essai)
essai
newdf
newdf
newdf
myDF
myDF
myDF
newDF
essai
myDF
for (i in 1:nrow(myDF)) {
    if (myDF$category[i]=="lonely") # If the sequence is not on a contig with a bait, it's a "distant" sequence
    {myDF$distance_to_bait[i] <- "distant"}
    else
    {if (myDF$category[i]=="BAIT") # If the sequence is a bait, then... distance to bait is nulle
     {myDF$distance_to_bait[i] <- "in_bait"}
     else
        {if (myDF$category[i]=="between") # if the sequence is between 2 baits
         {if (myDF$length[i]<=200) # If the sequence is smaller than 200bp
          {myDF$distance_to_bait[i]<-"0_to_100"} # Any base is distant to max 100bp to a bait
          else
             {if (myDF$length[i]<=600) # If the sequence is smaller than 600bp, we cut it
              {j <- nrow(myDF)+1 # We fill at the end of the file
                  myDF[j:j+2,] <- myDF[i,] # New lines are created to split the sequence
                  ## myDF[j,5] <- myDF[i,4]+100 # First piece is 100 long, close to 1 bait
                  ## myDF[j,17] <- "0_to_100"
                  ## myDF[j+2,4] <- myDF[i,5]-100 # Last piece is 100 long, close to 1 bait
                  ## myDF[j+2,17] <- "0_to_100"
                  ## myDF[j+1,4] <- myDF[j,5]+1 # Last piece is further from bait (100<d<300)
                  ## myDF[j+1,5] <- myDF[j+2,4]-1
                  ## myDF[j+2,17] <- "100_to_300"
                  ## myDF <- myDF[-i,]} ## remove line with the splitted sequence
                  }
              else
                 {if (myDF$length[i]<=1000) # If the sequence is smaller than 1000bp, we cut it
                  {j <- nrow(myDF)+1 # We fill at the end of the file
                      myDF[j,] <- myDF[i,] # Init.
                      ## myDF[j,5] <- myDF[i,4]+100 # First piece is 100 long, close to 1 bait
                      ## myDF[j,17] <- "0_to_100"
                      ## myDF[j+4,4] <- myDF[i,5]-100 # Last piece is 100 long, close to 1 bait
                      ## myDF[j+4,17] <- "0_to_100"
                      ## myDF[j+1,4] <- myDF[j,5]+1
                      ## myDF[j+1,5] <- myDF[j+1,4]+200 # 2nd piece is 200 long, 100to300 from bait
                      ## myDF[j+1,17] <- "100_to_300"
                      ## myDF[j+3,5] <- myDF[j+4,4]-1
                      ## myDF[j+3,4] <- myDF[j+3,5]-1 # 4nd piece is 200 long, 100to300 from bait
                      ## myDF[j+3,17] <- "100_to_300"
                      ## myDF[j+4,4] <- myDF[j+3,5]+1
                      ## myDF[j+4,5] <- myDF[j+5,4]-1 # Middle piece is further away [300 to 500bp]
                      ## myDF[j+4,17] <- "300_to_500"
                      ## myDF <- myDF[-i,]} # Remove line with the splitted sequence
                  }
essai <- head(GTFordered, 50)
myDF <- essai
myDF$category <- NA
myDF$length <- myDF$V5 - myDF$V4 +1
if (str_split_fixed(myDF$V13, "_", 3)[1,1]=="Off")  # Is it an "Off"?
    {
        if (myDF[1,1]!=myDF[2,1])
        {
            myDF$category[1] <- "lonely"
        }
}    
## full loop:
for (i in 2:nrow(myDF)) {
    if (str_split_fixed(myDF$V13, "_", 3)[i,1]=="Off")  # Is it an "Off"?
    {if (myDF[i,1]!=myDF[i-1,1] & myDF[i,1]!=myDF[i+1,1]) # Is it a seq without baits?
        {myDF$category[i] <- "lonely"}
        else
        {if (myDF[i,1]==myDF[i-1,1] & myDF[i,1]==myDF[i+1,1]) # Is it a seq between 2 baits?
            {myDF$category[i] <- "between"}
            else
            {if (myDF[i,1]==myDF[i-1,1]) # Is it a seq AFTER a bait?
                {myDF$category[i] <- "after"}
                else
                {if (myDF[i,1]==myDF[i+1,1]) # Is it a seq BEFORE a bait?
                    {myDF$category[i] <- "before"}
                }
            }
        }
    }
    else
    {myDF$category[i] <- "BAIT"}
}
myDF$distance_to_bait <- NA
j <- nrow(myDF)+1
for (i in 1:nrow(myDF)) {
    if (myDF$category[i]=="lonely") # If the sequence is not on a contig with a bait, it's a "distant" sequence
    {myDF$distance_to_bait[i] <- "distant"}
    else
    {if (myDF$category[i]=="BAIT") # If the sequence is a bait, then... distance to bait is nulle
     {myDF$distance_to_bait[i] <- "in_bait"}
     else
        {if (myDF$category[i]=="between") # if the sequence is between 2 baits
         {if (myDF$length[i]<=200) # If the sequence is smaller than 200bp
          {myDF$distance_to_bait[i]<-"0_to_100"} # Any base is distant to max 100bp to a bait
          else
             {if (myDF$length[i]<=600) # If the sequence is smaller than 600bp, we cut it
              {j <- nrow(myDF)+1 # We fill at the end of the file
                  myDF[j:j+2,] <- myDF[i,] # New lines are created to split the sequence
                  ## myDF[j,5] <- myDF[i,4]+100 # First piece is 100 long, close to 1 bait
                  ## myDF[j,17] <- "0_to_100"
                  ## myDF[j+2,4] <- myDF[i,5]-100 # Last piece is 100 long, close to 1 bait
                  ## myDF[j+2,17] <- "0_to_100"
                  ## myDF[j+1,4] <- myDF[j,5]+1 # Last piece is further from bait (100<d<300)
                  ## myDF[j+1,5] <- myDF[j+2,4]-1
                  ## myDF[j+2,17] <- "100_to_300"
                  ## myDF <- myDF[-i,]} ## remove line with the splitted sequence
                  }
              else
                 {if (myDF$length[i]<=1000) # If the sequence is smaller than 1000bp, we cut it
                  {j <- nrow(myDF)+1 # We fill at the end of the file
                      myDF[j,] <- myDF[i,] # Init.
                      ## myDF[j,5] <- myDF[i,4]+100 # First piece is 100 long, close to 1 bait
                      ## myDF[j,17] <- "0_to_100"
                      ## myDF[j+4,4] <- myDF[i,5]-100 # Last piece is 100 long, close to 1 bait
                      ## myDF[j+4,17] <- "0_to_100"
                      ## myDF[j+1,4] <- myDF[j,5]+1
                      ## myDF[j+1,5] <- myDF[j+1,4]+200 # 2nd piece is 200 long, 100to300 from bait
                      ## myDF[j+1,17] <- "100_to_300"
                      ## myDF[j+3,5] <- myDF[j+4,4]-1
                      ## myDF[j+3,4] <- myDF[j+3,5]-1 # 4nd piece is 200 long, 100to300 from bait
                      ## myDF[j+3,17] <- "100_to_300"
                      ## myDF[j+4,4] <- myDF[j+3,5]+1
                      ## myDF[j+4,5] <- myDF[j+5,4]-1 # Middle piece is further away [300 to 500bp]
                      ## myDF[j+4,17] <- "300_to_500"
                      ## myDF <- myDF[-i,]} # Remove line with the splitted sequence
                  }
}
             }
         }
        }
    }
}
tail(myDF)

clear
)
myDF
myDF
tail(myDF)
head(myDF)
myDF[j,] <- myDF[5,]
head(myDF)
myDF
essai
tail(myDF)
tail(essai)
essai
tail(essai)
tail(myDF,15)
tail(essai)
tail(myDF,15)
tail(myDF[-i,])
tail(myDF[-i,], 15)
tail(myDF,15)
myDF
tail(myDF,30)
for (i in 1:nrow(myDF)) {
    if (myDF$category[i]=="lonely") { # If the sequence is not on a contig with a bait, it's a "distant" sequence
        myDF$distance_to_bait[i] <- "distant"
    } else {
        if (myDF$category[i]=="BAIT") { # If the sequence is a bait, then... distance to bait is nulle
            myDF$distance_to_bait[i] <- "in_bait"
        } else {
            if (myDF$category[i]=="between") { # if the sequence is between 2 baits
                if (myDF$length[i]<=200) { # If the sequence is smaller than 200bp
                    myDF$distance_to_bait[i]<-"0_to_100" # Any base is distant to max 100bp to a bait
                } else {
                    if (myDF$length[i]<=600) { # If the sequence is smaller than 600bp, we cut it
                        j <- nrow(myDF)+1 # We fill at the end of the file
                        myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                        myDF[j+1,] <- myDF[i,]
                        myDF[j+2,] <- myDF[i,]
                        myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                        myDF[j,17] <- "0_to_100"
                        myDF[j+2,4] <- myDF[j+2,5]-100 # Last piece is 100 long, close to 1 bait
                        myDF[j+2,17] <- "0_to_100"
                        myDF[j+1,4] <- myDF[j,5]+1 # Last piece is further from bait (100<d<300)
                        myDF[j+1,5] <- myDF[j+2,4]-1
                        myDF[j+1,17] <- "100_to_300"
                        myDF[i,17] <- "To remove"
                    } else {
                        if (myDF$length[i]<=1000) { # If the sequence is smaller than 1000bp, we cut it
                            j <- nrow(myDF)+1 # We fill at the end of the file
                            myDF[j,] <- myDF[i,] # Init.
                            myDF[j+1,] <- myDF[i,]
                            myDF[j+2,] <- myDF[i,]
                            myDF[j+3,] <- myDF[i,]
                            myDF[j+4,] <- myDF[i,]
                            myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                            myDF[j,17] <- "0_to_100"
                            myDF[j+4,4] <- myDF[j+4,5]-100 # Last piece is 100 long, close to 1 bait
                            myDF[j+4,17] <- "0_to_100"
                            myDF[j+1,4] <- myDF[j,5]+1
                            myDF[j+1,5] <- myDF[j+1,4]+200 # 2nd piece is 200 long, 100to300 from bait
                            myDF[j+1,17] <- "100_to_300"
                            myDF[j+3,5] <- myDF[j+4,4]-1
                            myDF[j+3,4] <- myDF[j+3,5]-200 # 4nd piece is 200 long, 100to300 from bait
                            myDF[j+3,17] <- "100_to_300"
                            myDF[j+2,4] <- myDF[j+1,5]+1
                            myDF[j+2,5] <- myDF[j+3,4]-1 # Middle piece is further away [300 to 500bp]
                            myDF[j+2,17] <- "300_to_500"
                            myDF[i,17] <- "To remove"
                        } else {
                            j <- nrow(myDF)+1 # We fill at the end of the file
                            myDF[j,] <- myDF[i,] # Init.
                            myDF[j+1,] <- myDF[i,]
                            myDF[j+2,] <- myDF[i,]
                            myDF[j+3,] <- myDF[i,]
                            myDF[j+4,] <- myDF[i,]
                            myDF[j+5,] <- myDF[i,]
                            myDF[j+6,] <- myDF[i,]
                            myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                            myDF[j,17] <- "0_to_100"
                            myDF[j+6,4] <- myDF[j+6,5]-100 # Last piece is 100 long, close to 1 bait
                            myDF[j+6,17] <- "0_to_100"
                            myDF[j+1,4] <- myDF[j,5]+1
                            myDF[j+1,5] <- myDF[j+1,4]+200 # 2nd piece is 200 long, 100to300 from bait
                            myDF[j+1,17] <- "100_to_300"
                            myDF[j+5,5] <- myDF[j+6,4]-1
                            myDF[j+5,4] <- myDF[j+5,5]-200 # 6st piece is 200 long, 100to300 from bait
                            myDF[j+5,17] <- "100_to_300"
                            myDF[j+2,4] <- myDF[j+1,5]+1
                            myDF[j+2,5] <- myDF[j+2,4]+200 # 3rd piece is 200 long, 300to500 from bait
                            myDF[j+2,17] <- "300_to_500"
                            myDF[j+4,5] <- myDF[j+5,4]-1
                            myDF[j+4,4] <- myDF[j+4,5]-200 # 5th piece is 200 long, 300to500 from bait
                            myDF[j+4,17] <- "300_to_500"
                            myDF[j+3,4] <- myDF[j+2,5]+1 # Middle piece is further away [more than 500]
                            myDF[j+3,5] <- myDF[j+4,4]-1
                            myDF[j+3,17] <- "more_than_500"
                            myDF[i,17] <- "To remove"
                        }
                    }
                }
            } else {
                if (myDF$category[i]=="before") { # if the sequence is before a bait
                    if (myDF$length[i]<=100) { # If the sequence is smaller than 100bp
                        myDF$distance_to_bait[i]<-"0_to_100" # Any base is distant to max 100bp to a bait
                    } else {
                        if (myDF$length[i]<=300) { # If the sequence is smaller than 300bp, we cut it
                            j <- nrow(myDF)+1 # We fill at the end of the file
                            myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                            myDF[j+1,] <- myDF[i,]
                            myDF[j,4] <- myDF[j,5]-100 # First piece is 100 long, close to 1 bait
                            myDF[j,17] <- "0_to_100"
                            myDF[j+1,5] <- myDF[j,4]-1 # Last piece is further from bait (100<d<300)
                            myDF[j+1,17] <- "100_to_300"
                            myDF[i,17] <- "To remove"
                        } else {
                            if (myDF$length[i]<=500) { # If the sequence is smaller than 500bp, we cut it
                                j <- nrow(myDF)+1 # We fill at the end of the file
                                myDF[j,] <- myDF[i,] # Init.
                                myDF[j+1,] <- myDF[i,]
                                myDF[j+2,] <- myDF[i,]
                                myDF[j,4] <- myDF[j,5]-100 # First piece is 100 long, close to 1 bait
                                myDF[j,17] <- "0_to_100"
                                myDF[j+1,5] <- myDF[j,4]-1 # 2nd piece is 200 long, 100to300 from bait
                                myDF[j+1,4] <- myDF[j+1,5]-200
                                myDF[j+1,17] <- "100_to_300"
                                myDF[j+2,5] <- myDF[j+1,4]-1 # 3rd piece is 200 long, further away [300 to 500bp]
                                myDF[j+2,17] <- "300_to_500"
                                myDF[i,17] <- "To remove"
                            } else {
                                j <- nrow(myDF)+1 # We fill at the end of the file
                                myDF[j,] <- myDF[i,] # Init.
                                myDF[j+1,] <- myDF[i,]
                                myDF[j+2,] <- myDF[i,]
                                myDF[j+3,] <- myDF[i,]
                                myDF[j,4] <- myDF[j,5]-100 # First piece is 100 long, close to 1 bait
                                myDF[j,17] <- "0_to_100"
                                myDF[j+1,5] <- myDF[j,4]-1 # 2nd piece is 200 long, 100to300 from bait
                                myDF[j+1,4] <- myDF[j+1,5]-200
                                myDF[j+1,17] <- "100_to_300"
                                myDF[j+2,5] <- myDF[j+1,4]-1 # 3rd piece is 200 long, further away [300 to 500bp]
                                myDF[j+2,4] <- myDF[j+2,5]-200
                                myDF[j+2,17] <- "300_to_500"
                                myDF[j+3,5] <- myDF[j+2,4]-1 # 4th piece is further than 500bp from bait
                                myDF[j+3,17] <- "more_than_500"
                                myDF[i,17] <- "To remove"
                            }
                        }
                    }
                } else {
                                if (myDF$category[i]=="after") { #if the sequence is after a bait
                                    if (myDF$length[i]<=100) { # If the sequence is smaller than 100bp
                                        myDF$distance_to_bait[i]<-"0_to_100" # Any base is distant to max 100bp to a bait
                                    } else {
                                        if (myDF$length[i]<=300) { # If the sequence is smaller than 300bp, we cut it
                                            j <- nrow(myDF)+1 # We fill at the end of the file
                                            myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                                            myDF[j+1,] <- myDF[i,]
                                            myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                                            myDF[j,17] <- "0_to_100"
                                            myDF[j+1,4] <- myDF[j,5]+1 # Last piece is further from bait (100<d<300)
                                            myDF[j+1,17] <- "100_to_300"
                                            myDF[i,17] <- "To remove"
                                        } else {
                                            if (myDF$length[i]<=500) { # If the sequence is smaller than 500bp, we cut it
                                                j <- nrow(myDF)+1 # We fill at the end of the file
                                                myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                                                myDF[j+1,] <- myDF[i,]
                                                myDF[j+2,] <- myDF[i,]
                                                myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                                                myDF[j,17] <- "0_to_100"
                                                myDF[j+1,4] <- myDF[j,5]+1 # 2nd piece is further from bait (100<d<300)
                                                myDF[j+1,5] <- myDF[j+1,4]+200
                                                myDF[j+1,17] <- "100_to_300"
                                                myDF[j+2,4] <- myDF[j+1,5]+1 #3rd piece is between 300 and 500 from bait
                                                mDF[j+2,17] <- "300_to_500"
                                                myDF[i,17] <- "To remove"
                                            } else {
                                                j <- nrow(myDF)+1 # We fill at the end of the file
                                                myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                                                myDF[j+1,] <- myDF[i,]
                                                myDF[j+2,] <- myDF[i,]
                                                myDF[j+3,] <- myDF[i,]
                                                myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                                                myDF[j,17] <- "0_to_100"
                                                myDF[j+1,4] <- myDF[j,5]+1 # 2nd piece is further from bait (100<d<300)
                                                myDF[j+1,5] <- myDF[j+1,4]+200
myDF$distance_to_bait <- NA
for (i in 1:nrow(myDF)) {
    if (myDF$category[i]=="lonely") { # If the sequence is not on a contig with a bait, it's a "distant" sequence
        myDF$distance_to_bait[i] <- "distant"
    } else {
        if (myDF$category[i]=="BAIT") { # If the sequence is a bait, then... distance to bait is nulle
            myDF$distance_to_bait[i] <- "in_bait"
        } else {
            if (myDF$category[i]=="between") { # if the sequence is between 2 baits
                if (myDF$length[i]<=200) { # If the sequence is smaller than 200bp
                    myDF$distance_to_bait[i]<-"0_to_100" # Any base is distant to max 100bp to a bait
                } else {
                    if (myDF$length[i]<=600) { # If the sequence is smaller than 600bp, we cut it
                        j <- nrow(myDF)+1 # We fill at the end of the file
                        myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                        myDF[j+1,] <- myDF[i,]
                        myDF[j+2,] <- myDF[i,]
                        myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                        myDF[j,17] <- "0_to_100"
                        myDF[j+2,4] <- myDF[j+2,5]-100 # Last piece is 100 long, close to 1 bait
                        myDF[j+2,17] <- "0_to_100"
                        myDF[j+1,4] <- myDF[j,5]+1 # Last piece is further from bait (100<d<300)
                        myDF[j+1,5] <- myDF[j+2,4]-1
                        myDF[j+1,17] <- "100_to_300"
                        myDF[i,17] <- "To remove"
                    } else {
                        if (myDF$length[i]<=1000) { # If the sequence is smaller than 1000bp, we cut it
                            j <- nrow(myDF)+1 # We fill at the end of the file
                            myDF[j,] <- myDF[i,] # Init.
                            myDF[j+1,] <- myDF[i,]
                            myDF[j+2,] <- myDF[i,]
                            myDF[j+3,] <- myDF[i,]
                            myDF[j+4,] <- myDF[i,]
                            myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                            myDF[j,17] <- "0_to_100"
                            myDF[j+4,4] <- myDF[j+4,5]-100 # Last piece is 100 long, close to 1 bait
                            myDF[j+4,17] <- "0_to_100"
                            myDF[j+1,4] <- myDF[j,5]+1
                            myDF[j+1,5] <- myDF[j+1,4]+200 # 2nd piece is 200 long, 100to300 from bait
                            myDF[j+1,17] <- "100_to_300"
                            myDF[j+3,5] <- myDF[j+4,4]-1
                            myDF[j+3,4] <- myDF[j+3,5]-200 # 4nd piece is 200 long, 100to300 from bait
                            myDF[j+3,17] <- "100_to_300"
                            myDF[j+2,4] <- myDF[j+1,5]+1
                            myDF[j+2,5] <- myDF[j+3,4]-1 # Middle piece is further away [300 to 500bp]
                            myDF[j+2,17] <- "300_to_500"
                            myDF[i,17] <- "To remove"
                        } else {
                            j <- nrow(myDF)+1 # We fill at the end of the file
                            myDF[j,] <- myDF[i,] # Init.
                            myDF[j+1,] <- myDF[i,]
                            myDF[j+2,] <- myDF[i,]
                            myDF[j+3,] <- myDF[i,]
                            myDF[j+4,] <- myDF[i,]
                            myDF[j+5,] <- myDF[i,]
                            myDF[j+6,] <- myDF[i,]
                            myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                            myDF[j,17] <- "0_to_100"
                            myDF[j+6,4] <- myDF[j+6,5]-100 # Last piece is 100 long, close to 1 bait
                            myDF[j+6,17] <- "0_to_100"
                            myDF[j+1,4] <- myDF[j,5]+1
                            myDF[j+1,5] <- myDF[j+1,4]+200 # 2nd piece is 200 long, 100to300 from bait
                            myDF[j+1,17] <- "100_to_300"
                            myDF[j+5,5] <- myDF[j+6,4]-1
                            myDF[j+5,4] <- myDF[j+5,5]-200 # 6st piece is 200 long, 100to300 from bait
                            myDF[j+5,17] <- "100_to_300"
                            myDF[j+2,4] <- myDF[j+1,5]+1
                            myDF[j+2,5] <- myDF[j+2,4]+200 # 3rd piece is 200 long, 300to500 from bait
                            myDF[j+2,17] <- "300_to_500"
                            myDF[j+4,5] <- myDF[j+5,4]-1
                            myDF[j+4,4] <- myDF[j+4,5]-200 # 5th piece is 200 long, 300to500 from bait
                            myDF[j+4,17] <- "300_to_500"
                            myDF[j+3,4] <- myDF[j+2,5]+1 # Middle piece is further away [more than 500]
                            myDF[j+3,5] <- myDF[j+4,4]-1
                            myDF[j+3,17] <- "more_than_500"
                            myDF[i,17] <- "To remove"
                        }
                    }
                }
            } else {
                if (myDF$category[i]=="before") { # if the sequence is before a bait
                    if (myDF$length[i]<=100) { # If the sequence is smaller than 100bp
                        myDF$distance_to_bait[i]<-"0_to_100" # Any base is distant to max 100bp to a bait
                    } else {
                        if (myDF$length[i]<=300) { # If the sequence is smaller than 300bp, we cut it
                            j <- nrow(myDF)+1 # We fill at the end of the file
                            myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                            myDF[j+1,] <- myDF[i,]
                            myDF[j,4] <- myDF[j,5]-100 # First piece is 100 long, close to 1 bait
                            myDF[j,17] <- "0_to_100"
                            myDF[j+1,5] <- myDF[j,4]-1 # Last piece is further from bait (100<d<300)
                            myDF[j+1,17] <- "100_to_300"
                            myDF[i,17] <- "To remove"
                        } else {
                            if (myDF$length[i]<=500) { # If the sequence is smaller than 500bp, we cut it
                                j <- nrow(myDF)+1 # We fill at the end of the file
                                myDF[j,] <- myDF[i,] # Init.
                                myDF[j+1,] <- myDF[i,]
                                myDF[j+2,] <- myDF[i,]
                                myDF[j,4] <- myDF[j,5]-100 # First piece is 100 long, close to 1 bait
                                myDF[j,17] <- "0_to_100"
                                myDF[j+1,5] <- myDF[j,4]-1 # 2nd piece is 200 long, 100to300 from bait
                                myDF[j+1,4] <- myDF[j+1,5]-200
                                myDF[j+1,17] <- "100_to_300"
                                myDF[j+2,5] <- myDF[j+1,4]-1 # 3rd piece is 200 long, further away [300 to 500bp]
                                myDF[j+2,17] <- "300_to_500"
                                myDF[i,17] <- "To remove"
                            } else {
                                j <- nrow(myDF)+1 # We fill at the end of the file
                                myDF[j,] <- myDF[i,] # Init.
                                myDF[j+1,] <- myDF[i,]
                                myDF[j+2,] <- myDF[i,]
                                myDF[j+3,] <- myDF[i,]
                                myDF[j,4] <- myDF[j,5]-100 # First piece is 100 long, close to 1 bait
                                myDF[j,17] <- "0_to_100"
                                myDF[j+1,5] <- myDF[j,4]-1 # 2nd piece is 200 long, 100to300 from bait
                                myDF[j+1,4] <- myDF[j+1,5]-200
                                myDF[j+1,17] <- "100_to_300"
                                myDF[j+2,5] <- myDF[j+1,4]-1 # 3rd piece is 200 long, further away [300 to 500bp]
                                myDF[j+2,4] <- myDF[j+2,5]-200
                                myDF[j+2,17] <- "300_to_500"
                                myDF[j+3,5] <- myDF[j+2,4]-1 # 4th piece is further than 500bp from bait
                                myDF[j+3,17] <- "more_than_500"
                                myDF[i,17] <- "To remove"
                            }
                        }
                    }
                } else {
                                if (myDF$category[i]=="after") { #if the sequence is after a bait
                                    if (myDF$length[i]<=100) { # If the sequence is smaller than 100bp
                                        myDF$distance_to_bait[i]<-"0_to_100" # Any base is distant to max 100bp to a bait
                                    } else {
                                        if (myDF$length[i]<=300) { # If the sequence is smaller than 300bp, we cut it
                                            j <- nrow(myDF)+1 # We fill at the end of the file
                                            myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                                            myDF[j+1,] <- myDF[i,]
                                            myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                                            myDF[j,17] <- "0_to_100"
                                            myDF[j+1,4] <- myDF[j,5]+1 # Last piece is further from bait (100<d<300)
                                            myDF[j+1,17] <- "100_to_300"
                                            myDF[i,17] <- "To remove"
                                        } else {
                                            if (myDF$length[i]<=500) { # If the sequence is smaller than 500bp, we cut it
                                                j <- nrow(myDF)+1 # We fill at the end of the file
                                                myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                                                myDF[j+1,] <- myDF[i,]
                                                myDF[j+2,] <- myDF[i,]
                                                myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                                                myDF[j,17] <- "0_to_100"
                                                myDF[j+1,4] <- myDF[j,5]+1 # 2nd piece is further from bait (100<d<300)
                                                myDF[j+1,5] <- myDF[j+1,4]+200
                                                myDF[j+1,17] <- "100_to_300"
                                                myDF[j+2,4] <- myDF[j+1,5]+1 #3rd piece is between 300 and 500 from bait
                                                mDF[j+2,17] <- "300_to_500"
                                                myDF[i,17] <- "To remove"
                                            } else {
                                                j <- nrow(myDF)+1 # We fill at the end of the file
                                                myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                                                myDF[j+1,] <- myDF[i,]
                                                myDF[j+2,] <- myDF[i,]
                                                myDF[j+3,] <- myDF[i,]
                                                myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                                                myDF[j,17] <- "0_to_100"
                                                myDF[j+1,4] <- myDF[j,5]+1 # 2nd piece is further from bait (100<d<300)
                                                myDF[j+1,5] <- myDF[j+1,4]+200
                                                myDF[j+1,17] <- "100_to_300"
                                                myDF[j+2,4] <- myDF[j+1,5]+1 #3rd piece is between 300 and 500 from bait
                                                myDF[j+2,5] <- myDF[j+2,4]+200                                     
                                                mDF[j+2,17] <- "300_to_500"
                                                myDF[j+3,4] <- myDF[j+2,4]+1 # 4th piece is further away (more than 500)
                                                myDF[j+3,17] <- "more_than_500"
                                                myDF[i,17] <- "To remove"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
essai <- head(GTFordered, 50)
myDF <- essai
myDF$category <- NA
myDF$length <- myDF$V5 - myDF$V4 +1
if (str_split_fixed(myDF$V13, "_", 3)[1,1]=="Off")  # Is it an "Off"?
    {
        if (myDF[1,1]!=myDF[2,1])
        {
            myDF$category[1] <- "lonely"
        }
}    
## full loop:
for (i in 2:nrow(myDF)) {
    if (str_split_fixed(myDF$V13, "_", 3)[i,1]=="Off")  # Is it an "Off"?
    {if (myDF[i,1]!=myDF[i-1,1] & myDF[i,1]!=myDF[i+1,1]) # Is it a seq without baits?
        {myDF$category[i] <- "lonely"}
        else
        {if (myDF[i,1]==myDF[i-1,1] & myDF[i,1]==myDF[i+1,1]) # Is it a seq between 2 baits?
            {myDF$category[i] <- "between"}
            else
            {if (myDF[i,1]==myDF[i-1,1]) # Is it a seq AFTER a bait?
                {myDF$category[i] <- "after"}
                else
                {if (myDF[i,1]==myDF[i+1,1]) # Is it a seq BEFORE a bait?
                    {myDF$category[i] <- "before"}
                }
            }
        }
    }
    else
    {myDF$category[i] <- "BAIT"}
}
myDF$distance_to_bait <- NA
for (i in 1:nrow(myDF)) {
    if (myDF$category[i]=="lonely") { # If the sequence is not on a contig with a bait, it's a "distant" sequence
        myDF$distance_to_bait[i] <- "distant"
    } else {
        if (myDF$category[i]=="BAIT") { # If the sequence is a bait, then... distance to bait is nulle
            myDF$distance_to_bait[i] <- "in_bait"
        } else {
            if (myDF$category[i]=="between") { # if the sequence is between 2 baits
                if (myDF$length[i]<=200) { # If the sequence is smaller than 200bp
                    myDF$distance_to_bait[i]<-"0_to_100" # Any base is distant to max 100bp to a bait
                } else {
                    if (myDF$length[i]<=600) { # If the sequence is smaller than 600bp, we cut it
                        j <- nrow(myDF)+1 # We fill at the end of the file
                        myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                        myDF[j+1,] <- myDF[i,]
                        myDF[j+2,] <- myDF[i,]
                        myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                        myDF[j,17] <- "0_to_100"
                        myDF[j+2,4] <- myDF[j+2,5]-100 # Last piece is 100 long, close to 1 bait
                        myDF[j+2,17] <- "0_to_100"
                        myDF[j+1,4] <- myDF[j,5]+1 # Last piece is further from bait (100<d<300)
                        myDF[j+1,5] <- myDF[j+2,4]-1
                        myDF[j+1,17] <- "100_to_300"
                        myDF[i,17] <- "To remove"
                    } else {
                        if (myDF$length[i]<=1000) { # If the sequence is smaller than 1000bp, we cut it
                            j <- nrow(myDF)+1 # We fill at the end of the file
                            myDF[j,] <- myDF[i,] # Init.
                            myDF[j+1,] <- myDF[i,]
                            myDF[j+2,] <- myDF[i,]
                            myDF[j+3,] <- myDF[i,]
                            myDF[j+4,] <- myDF[i,]
                            myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                            myDF[j,17] <- "0_to_100"
                            myDF[j+4,4] <- myDF[j+4,5]-100 # Last piece is 100 long, close to 1 bait
                            myDF[j+4,17] <- "0_to_100"
                            myDF[j+1,4] <- myDF[j,5]+1
                            myDF[j+1,5] <- myDF[j+1,4]+200 # 2nd piece is 200 long, 100to300 from bait
                            myDF[j+1,17] <- "100_to_300"
                            myDF[j+3,5] <- myDF[j+4,4]-1
                            myDF[j+3,4] <- myDF[j+3,5]-200 # 4nd piece is 200 long, 100to300 from bait
                            myDF[j+3,17] <- "100_to_300"
                            myDF[j+2,4] <- myDF[j+1,5]+1
                            myDF[j+2,5] <- myDF[j+3,4]-1 # Middle piece is further away [300 to 500bp]
                            myDF[j+2,17] <- "300_to_500"
                            myDF[i,17] <- "To remove"
                        } else {
                            j <- nrow(myDF)+1 # We fill at the end of the file
                            myDF[j,] <- myDF[i,] # Init.
                            myDF[j+1,] <- myDF[i,]
                            myDF[j+2,] <- myDF[i,]
                            myDF[j+3,] <- myDF[i,]
                            myDF[j+4,] <- myDF[i,]
                            myDF[j+5,] <- myDF[i,]
                            myDF[j+6,] <- myDF[i,]
                            myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                            myDF[j,17] <- "0_to_100"
                            myDF[j+6,4] <- myDF[j+6,5]-100 # Last piece is 100 long, close to 1 bait
                            myDF[j+6,17] <- "0_to_100"
                            myDF[j+1,4] <- myDF[j,5]+1
                            myDF[j+1,5] <- myDF[j+1,4]+200 # 2nd piece is 200 long, 100to300 from bait
                            myDF[j+1,17] <- "100_to_300"
                            myDF[j+5,5] <- myDF[j+6,4]-1
                            myDF[j+5,4] <- myDF[j+5,5]-200 # 6st piece is 200 long, 100to300 from bait
                            myDF[j+5,17] <- "100_to_300"
                            myDF[j+2,4] <- myDF[j+1,5]+1
                            myDF[j+2,5] <- myDF[j+2,4]+200 # 3rd piece is 200 long, 300to500 from bait
                            myDF[j+2,17] <- "300_to_500"
                            myDF[j+4,5] <- myDF[j+5,4]-1
                            myDF[j+4,4] <- myDF[j+4,5]-200 # 5th piece is 200 long, 300to500 from bait
                            myDF[j+4,17] <- "300_to_500"
                            myDF[j+3,4] <- myDF[j+2,5]+1 # Middle piece is further away [more than 500]
                            myDF[j+3,5] <- myDF[j+4,4]-1
                            myDF[j+3,17] <- "more_than_500"
                            myDF[i,17] <- "To remove"
                        }
                    }
                }
            } else {
                if (myDF$category[i]=="before") { # if the sequence is before a bait
                    if (myDF$length[i]<=100) { # If the sequence is smaller than 100bp
                        myDF$distance_to_bait[i]<-"0_to_100" # Any base is distant to max 100bp to a bait
                    } else {
                        if (myDF$length[i]<=300) { # If the sequence is smaller than 300bp, we cut it
                            j <- nrow(myDF)+1 # We fill at the end of the file
                            myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                            myDF[j+1,] <- myDF[i,]
                            myDF[j,4] <- myDF[j,5]-100 # First piece is 100 long, close to 1 bait
                            myDF[j,17] <- "0_to_100"
                            myDF[j+1,5] <- myDF[j,4]-1 # Last piece is further from bait (100<d<300)
                            myDF[j+1,17] <- "100_to_300"
                            myDF[i,17] <- "To remove"
                        } else {
                            if (myDF$length[i]<=500) { # If the sequence is smaller than 500bp, we cut it
                                j <- nrow(myDF)+1 # We fill at the end of the file
                                myDF[j,] <- myDF[i,] # Init.
                                myDF[j+1,] <- myDF[i,]
                                myDF[j+2,] <- myDF[i,]
                                myDF[j,4] <- myDF[j,5]-100 # First piece is 100 long, close to 1 bait
                                myDF[j,17] <- "0_to_100"
                                myDF[j+1,5] <- myDF[j,4]-1 # 2nd piece is 200 long, 100to300 from bait
                                myDF[j+1,4] <- myDF[j+1,5]-200
                                myDF[j+1,17] <- "100_to_300"
                                myDF[j+2,5] <- myDF[j+1,4]-1 # 3rd piece is 200 long, further away [300 to 500bp]
                                myDF[j+2,17] <- "300_to_500"
                                myDF[i,17] <- "To remove"
                            } else {
                                j <- nrow(myDF)+1 # We fill at the end of the file
                                myDF[j,] <- myDF[i,] # Init.
                                myDF[j+1,] <- myDF[i,]
                                myDF[j+2,] <- myDF[i,]
                                myDF[j+3,] <- myDF[i,]
                                myDF[j,4] <- myDF[j,5]-100 # First piece is 100 long, close to 1 bait
                                myDF[j,17] <- "0_to_100"
                                myDF[j+1,5] <- myDF[j,4]-1 # 2nd piece is 200 long, 100to300 from bait
                                myDF[j+1,4] <- myDF[j+1,5]-200
                                myDF[j+1,17] <- "100_to_300"
                                myDF[j+2,5] <- myDF[j+1,4]-1 # 3rd piece is 200 long, further away [300 to 500bp]
                                myDF[j+2,4] <- myDF[j+2,5]-200
                                myDF[j+2,17] <- "300_to_500"
                                myDF[j+3,5] <- myDF[j+2,4]-1 # 4th piece is further than 500bp from bait
                                myDF[j+3,17] <- "more_than_500"
                                myDF[i,17] <- "To remove"
                            }
                        }
                    }
                } else {
                    if (myDF$category[i]=="after") { #if the sequence is after a bait
                        if (myDF$length[i]<=100) { # If the sequence is smaller than 100bp
                            myDF$distance_to_bait[i]<-"0_to_100" # Any base is distant to max 100bp to a bait
                        } else {
                            if (myDF$length[i]<=300) { # If the sequence is smaller than 300bp, we cut it
                                j <- nrow(myDF)+1 # We fill at the end of the file
                                myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                                myDF[j+1,] <- myDF[i,]
                                myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                                myDF[j,17] <- "0_to_100"
                                myDF[j+1,4] <- myDF[j,5]+1 # Last piece is further from bait (100<d<300)
                                myDF[j+1,17] <- "100_to_300"
                                myDF[i,17] <- "To remove"
                            } else {
                                if (myDF$length[i]<=500) { # If the sequence is smaller than 500bp, we cut it
                                    j <- nrow(myDF)+1 # We fill at the end of the file
                                    myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                                    myDF[j+1,] <- myDF[i,]
                                    myDF[j+2,] <- myDF[i,]
                                    myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                                    myDF[j,17] <- "0_to_100"
                                    myDF[j+1,4] <- myDF[j,5]+1 # 2nd piece is further from bait (100<d<300)
                                    myDF[j+1,5] <- myDF[j+1,4]+200
                                    myDF[j+1,17] <- "100_to_300"
                                    myDF[j+2,4] <- myDF[j+1,5]+1 #3rd piece is between 300 and 500 from bait
                                    mDF[j+2,17] <- "300_to_500"
                                    myDF[i,17] <- "To remove"
                                } else {
                                    j <- nrow(myDF)+1 # We fill at the end of the file
                                    myDF[j,] <- myDF[i,] # New lines are created to split the sequence
                                    myDF[j+1,] <- myDF[i,]
                                    myDF[j+2,] <- myDF[i,]
                                    myDF[j+3,] <- myDF[i,]
                                    myDF[j,5] <- myDF[j,4]+100 # First piece is 100 long, close to 1 bait
                                    myDF[j,17] <- "0_to_100"
                                    myDF[j+1,4] <- myDF[j,5]+1 # 2nd piece is further from bait (100<d<300)
                                    myDF[j+1,5] <- myDF[j+1,4]+200
                                    myDF[j+1,17] <- "100_to_300"
                                    myDF[j+2,4] <- myDF[j+1,5]+1 #3rd piece is between 300 and 500 from bait
                                    myDF[j+2,5] <- myDF[j+2,4]+200                                     
                                    mDF[j+2,17] <- "300_to_500"
                                    myDF[j+3,4] <- myDF[j+2,4]+1 # 4th piece is further away (more than 500)
                                    myDF[j+3,17] <- "more_than_500"
                                    myDF[i,17] <- "To remove"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
}
}
}
    }

myDF
tail(myDF)
head(myDF,50)
myDF
tail(myDF)
head(myDF,50)
head(myDF)
paste(myDF$V13, myDF$distance_to_bait, sep="_")
myDF
head(myDF)
tail(myDF)
tail(myDF)
myDF
tail(myDF,50)
headl(myDF,50)
head(myDF,50)
tail(myDF,70)
myDF
myDF
